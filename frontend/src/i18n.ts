import i18next from 'i18next';
import { initReactI18next } from 'react-i18next';

const resources = {
  en: {
    translation: {
      title: 'VLM-OCR: Intelligent PDF Document Recognition System',
      subtitle: 'Upload PDF and extract text with VLM OCR',
      tabs: {
        config: 'Configuration',
        upload: 'Upload & Process',
        batch: 'Batch Processing',
        results: 'OCR Results',
        comparison: 'Result Comparison',
        final: 'Final Result'
      },
      upload: {
        title: 'Upload PDF',
        description: 'Upload PDF documents to start OCR processing',
        dragDrop: 'Drag & drop PDF file or click to upload',
        supportedFormat: 'Supports PDF format',
        processButton: 'Process PDF',
        processing: 'Processing...',
        processError: 'Error during processing: {{error}}',
        fileSelected: 'File selected: {{fileName}}',
        noFileOrApi: 'Please select a PDF file and configure at least one API',
        processComplete: 'PDF processing complete'
      },
      results: {
        selected: 'Result selected.',
        noSelection: 'Please select at least one result first.',
        combined: 'Results combined.',
        copied: 'Copied: ',
        downloaded: 'Markdown file downloaded.',
        combineSelected: 'Combine Selected Results',
        page: 'Page {{page}}',
        unknownApi: 'Unknown API',
        selectedButton: 'Selected',
        selectButton: 'Select',
        noResults: 'No OCR results yet.',
        processPdfPrompt: 'Please process a PDF file first.'
      },
      finalResult: {
        title: 'Final Combined Result',
        description: 'Edit and download your final Markdown result',
        copyToClipboard: 'Copy to Clipboard',
        downloadMarkdown: 'Download Markdown',
        noFinalResult: 'No final result yet.',
        selectAndCombinePrompt: 'Please select and combine OCR results first.',
        editLabel: 'Edit Markdown Content',
        previewLabel: 'Preview',
        placeholder: 'Your Markdown content will be displayed here...'
      },
      apiConfig: {
        title: 'API Configuration',
        description: 'Configure your API endpoints to start processing PDF documents',
        addButton: 'Add API',
        emptyState: 'No API configured',
        emptyHint: 'Click "Add API" to start configuration',
        added: 'API configuration added',
        removed: 'API configuration removed',
        addDialogTitle: 'Add API Configuration',
        nameLabel: 'API Name *',
        namePlaceholder: 'My OCR API',
        endpointLabel: 'Endpoint URL *',
        endpointPlaceholder: 'https://api.example.com/ocr',
        apiKeyLabel: 'API Key',
        apiKeyPlaceholder: 'sk-...',
        modelLabel: 'Model',
        modelPlaceholder: 'gpt-4-vision',
        modelPrefix: 'Model: ',
        providerLabel: 'Provider',
        providerPrefix: 'Provider: ',
        deleteApiConfig: 'Delete API Configuration',
        selectModel: 'Select a model',
        customModel: 'Custom model',
        customModelLabel: 'Custom Model Name',
        customModelPlaceholder: 'Enter custom model name',
        requiredFields: 'API name and endpoint URL are required'
      },
      message: {
        pending: 'Pending',
        processing: 'Processing',
        completed: 'Completed',
        error: 'Error',
        imageCount: 'Image Number',
        apiCount: 'API Number',
        processingStatus: 'Processing Status',
        currentPage: 'Current Page',
        processingDescription: 'Processing your PDF document, please wait...',
        progressLabel: 'Processing Progress'
      },
      batch: {
        title: 'Batch File Processing',
        description: 'Upload and process multiple PDF files simultaneously',
        dragDrop: 'Drag & drop PDF files or click to upload',
        maxFiles: 'Maximum {{max}} files',
        processing: 'Processing',
        completed: 'Completed',
        error: 'Error',
        pending: 'Pending',
        remove: 'Remove',
        preview: 'Preview',
        processAll: 'Process All Files',
        clearAll: 'Clear All',
        fileCount: '{{count}} files selected'
      },
      progress: {
        title: 'Processing Progress',
        showDetails: 'Show Details',
        hideDetails: 'Hide Details',
        files: 'Files',
        pages: 'Pages',
        apis: 'APIs',
        completed: 'Completed',
        overall: 'Overall Progress',
        pending: 'Pending',
        processing: 'Processing',
        errors: 'Errors',
        elapsed: 'Elapsed',
        average: 'Average',
        remaining: 'Remaining',
        page: 'Page',
        taskDetails: 'Task Details'
      },
      comparison: {
        title: 'Enhanced Result Comparison',
        description: 'Compare and analyze OCR results from different APIs',
        noResults: 'No Results Available',
        noResultsDescription: 'Process some PDF files first to see comparison results here.',
        viewMode: 'View Mode',
        grid: 'Grid View',
        list: 'List View',
        compare: 'Compare Selected',
        selectForComparison: 'Select for Comparison',
        favorite: 'Favorite',
        unfavorite: 'Unfavorite',
        copy: 'Copy',
        download: 'Download',
        confidence: 'Confidence',
        processingTime: 'Processing Time',
        wordCount: 'Word Count',
        similarity: 'Similarity',
        analysis: 'Analysis'
      },
      preview: {
        title: 'PDF Preview',
        loading: 'Loading PDF...',
        error: 'Error loading PDF',
        page: 'Page {{current}} of {{total}}',
        zoom: 'Zoom',
        rotate: 'Rotate',
        previous: 'Previous',
        next: 'Next'
      },
      common: {
        close: 'Close',
        cancel: 'Cancel',
        add: 'Add',
        save: 'Save',
        delete: 'Delete',
        edit: 'Edit',
        view: 'View',
        select: 'Select',
        selected: 'Selected'
      }
    }
  },
  zh: {
    translation: {
      title: 'VLM-OCR: 智能PDF文档识别与处理系统',
      subtitle: '上传PDF并使用VLM OCR提取文本',
      tabs: {
        config: '配置管理',
        upload: '上传与处理',
        batch: '批量处理',
        results: 'OCR结果',
        comparison: '结果比较',
        final: '最终结果'
      },
      upload: {
        title: '上传PDF',
        description: '上传PDF文档开始OCR处理',
        dragDrop: '拖放PDF文件或点击上传',
        supportedFormat: '支持PDF格式',
        processButton: '处理PDF',
        processing: '处理中...',
        processError: '处理时出错: {{error}}',
        fileSelected: '已选择文件: {{fileName}}',
        noFileOrApi: '请先选择PDF文件并配置至少一个API',
        processComplete: 'PDF处理完成'
      },
      results: {
        selected: '已选择结果',
        noSelection: '请先选择至少一个结果',
        combined: '结果已合并',
        copied: '已复制到剪贴板',
        downloaded: '已下载Markdown文件',
        combineSelected: '合并选定结果',
        page: '第 {{page}} 页',
        unknownApi: '未知API',
        selectedButton: '已选择',
        selectButton: '选择',
        noResults: '尚无OCR结果',
        processPdfPrompt: '请先处理PDF文件'
      },
      finalResult: {
        title: '最终合并结果',
        description: '编辑和下载您的最终Markdown结果',
        copyToClipboard: '复制到剪贴板',
        downloadMarkdown: '下载Markdown',
        noFinalResult: '尚无最终结果',
        selectAndCombinePrompt: '请先选择并合并OCR结果',
        editLabel: '编辑Markdown内容',
        previewLabel: '预览效果',
        placeholder: '您的Markdown内容将显示在这里...'
      },
      apiConfig: {
        title: 'API配置',
        description: '配置您的API端点以开始处理PDF文档',
        addButton: '添加API',
        emptyState: '尚未配置API',
        emptyHint: '点击「添加API」按钮开始配置',
        added: 'API配置已添加',
        removed: 'API配置已删除',
        addDialogTitle: '添加API配置',
        nameLabel: 'API名称 *',
        namePlaceholder: '我的OCR API',
        endpointLabel: '端点URL *',
        endpointPlaceholder: 'https://api.example.com/ocr',
        apiKeyLabel: 'API密钥',
        apiKeyPlaceholder: 'sk-...',
        modelLabel: '模型',
        modelPlaceholder: 'gpt-4-vision',
        modelPrefix: '模型: ',
        providerLabel: '提供商',
        providerPrefix: '提供商: ',
        deleteApiConfig: '删除API配置',
        selectModel: '选择模型',
        customModel: '自定义模型',
        customModelLabel: '自定义模型名称',
        customModelPlaceholder: '输入自定义模型名称',
        requiredFields: 'API名称和端点URL是必填项'
      },
      message: {
        pending: '待处理',
        processing: '处理中',
        completed: '处理完成',
        error: '处理出错',
        imageCount: '图片数量',
        apiCount: 'API数量',
        processingStatus: '处理状态',
        currentPage: '当前页数',
        processingDescription: '正在处理您的PDF文档，请稍候...',
        progressLabel: '处理进度'
      },
      batch: {
        title: '批量文件处理',
        description: '同时上传和处理多个PDF文件',
        dragDrop: '拖放PDF文件或点击上传',
        maxFiles: '最多{{max}}个文件',
        processing: '处理中',
        completed: '已完成',
        error: '错误',
        pending: '待处理',
        remove: '移除',
        preview: '预览',
        processAll: '处理所有文件',
        clearAll: '清空所有',
        fileCount: '已选择{{count}}个文件'
      },
      progress: {
        title: '处理进度',
        showDetails: '显示详情',
        hideDetails: '隐藏详情',
        files: '文件',
        pages: '页面',
        apis: 'API',
        completed: '已完成',
        overall: '总体进度',
        pending: '待处理',
        processing: '处理中',
        errors: '错误',
        elapsed: '已用时',
        average: '平均',
        remaining: '剩余',
        page: '页面',
        taskDetails: '任务详情'
      },
      comparison: {
        title: '增强结果比较',
        description: '比较和分析不同API的OCR结果',
        noResults: '暂无结果',
        noResultsDescription: '请先处理一些PDF文件以查看比较结果。',
        viewMode: '查看模式',
        grid: '网格视图',
        list: '列表视图',
        compare: '比较选中项',
        selectForComparison: '选择比较',
        favorite: '收藏',
        unfavorite: '取消收藏',
        copy: '复制',
        download: '下载',
        confidence: '置信度',
        processingTime: '处理时间',
        wordCount: '字数',
        similarity: '相似度',
        analysis: '分析'
      },
      preview: {
        title: 'PDF预览',
        loading: '加载PDF中...',
        error: '加载PDF出错',
        page: '第{{current}}页，共{{total}}页',
        zoom: '缩放',
        rotate: '旋转',
        previous: '上一页',
        next: '下一页'
      },
      common: {
        close: '关闭',
        cancel: '取消',
        add: '添加',
        save: '保存',
        delete: '删除',
        edit: '编辑',
        view: '查看',
        select: '选择',
        selected: '已选择'
      }
    }
  }
};

i18next
  .use(initReactI18next)
  .init({
    resources,
    lng: 'en',
    fallbackLng: 'en',
    interpolation: {
      escapeValue: false
    }
  });

export default i18next;